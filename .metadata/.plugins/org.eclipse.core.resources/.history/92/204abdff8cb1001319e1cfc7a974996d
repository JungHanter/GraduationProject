class Controls {
  
  
}

ControlP5 cp5;

RadioButton rb;
Slider soundAllSlider;
Slider[] soundSlider = new Slider[6];

int selectSourceNum = 0;
int nodeSoundAll = 0;
int nodeSound0 = 0;
int nodeSound1 = 0;
int nodeSound2 = 0;
int nodeSound3 = 0;
int nodeSound4 = 0;
int nodeSound5 = 0;

void initControls() {
  cp5 = new ControlP5(this);
  rb = cp5.addRadioButton("radioButton")
         .setPosition(Global.CANVAS_SIZE+20, 20)
         .setSize(40,20)
         .setColorLabel(color(255))
         .setItemsPerRow(4)
         .setSpacingColumn(50);
  for(int i=0; i<Global.NUMBER_OF_SOURCE; i++) {
    rb.addItem("Source "+i, i);
  }
  rb.activate(0);
         
  for(Toggle t:rb.getItems()) {
     t.captionLabel().setColorBackground(color(255,80));
     t.captionLabel().style().moveMargin(-7,0,0,-3);
     t.captionLabel().style().movePadding(7,0,0,3);
     t.captionLabel().style().backgroundWidth = 45;
     t.captionLabel().style().backgroundHeight = 13;
   }
   
   soundAllSlider = cp5.addSlider("nodeSoundAll")
      .setPosition(Global.CANVAS_SIZE+20, 60)
      .setSize(300,20)
      .setRange(-100,300)
      .setValue(0);
   for(int i=0; i<Global.NUMBER_OF_NODETYPE; i++) {
     soundSlider[i] = cp5.addSlider("nodeSound"+i)
        .setPosition(Global.CANVAS_SIZE+20, 100 + i*30)
        .setSize(300,20)
        .setRange(-100,300)
        .setValue(0);
   }
   
   
   
   cp5.addButton("reset")
     .setPosition(Global.CANVAS_SIZE+20,Global.CANVAS_SIZE-60)
     .setSize(360,40)
     ;
}

void radioButton(int num) {
  selectSourceNum = num;
  println("select Source "+num);
}

void reset() {
  setup();
}

boolean noAllChange = false;
void controlEvent(ControlEvent theEvent) {
  if(theEvent.isFrom(rb)) {
    //print("got an event from "+theEvent.getName()+"\t");
    for(int i=0;i<theEvent.getGroup().getArrayValue().length;i++) {
      //print(int(theEvent.getGroup().getArrayValue()[i]));
    }
    //println("\t "+theEvent.getValue());
    selectSourceNum = (int)theEvent.group().value();
    println("select Source num="+selectSourceNum);
    
    AudioManager am = getAudioManager();
    noAllChange = true;
    soundAllSlider.setValue(0);
    for(int i=0; i<Global.NUMBER_OF_NODETYPE; i++) {
      soundSlider[i].setValue(am.getVolume(selectSourceNum, i));
    }
  
  } else if(theEvent.isFrom(soundAllSlider)) {
    if(noAllChange) {
      noAllChange = false;
      return;
    }
    
    AudioManager am = getAudioManager();
    int volume = (int)soundAllSlider.getValue();
    
    for(int i=0; i<Global.NUMBER_OF_NODETYPE; i++) {
      soundSlider[i].setValue(volume);
      am.setVolume(selectSourceNum, i, volume);
    }
    
  } else {
    for(int i=0; i<Global.NUMBER_OF_NODETYPE; i++) {
      if(theEvent.isFrom(soundSlider[i])) {
        AudioManager am = getAudioManager();
        am.setVolume(selectSourceNum, i, (int)soundSlider[i].getValue());
        break;
      }
    }
  }
}

